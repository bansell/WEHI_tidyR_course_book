step_result_v <- paste('Kripke prefers', i)
#retain the print() command to check that the loop is working
print(step_result_v)
#overwrite loop_output_v to contain itself and one extra value
loop_output_v <- c(loop_output_v, step_result_v)
}
loop_output_v
library(tidyverse)
loop_output_df <- data_frame()
for(i in interests){
#same as above
step_result_v <- paste('Kripke prefers', i)
#make 1 column x 1-row dataframe:
#  The column name is 'sentence'
#  The row contains the text in step_result_v
step_result_df <- data_frame('sentence' = step_result_v)
#check that each step is working
print(step_result_df)
#overwrite the output dataframe with itself, and the extra row
loop_output_df <- rbind(loop_output_df, step_result_df)
}
library(tidyverse)
screen_plate <- read_csv('~/Desktop/WEHI_tidyR_course/drug_screening_results/plate1.csv')
screen_plate %>% dim()
screen_plate %>% head()
?geom_tile()
#Copy and paste the code to make a toy data frame
df <- data.frame(
x = rep(c(2, 5, 7, 9, 12), 2),
y = rep(c(1, 2), each = 5),
z = factor(rep(1:5, each = 2)),
w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)
#Run the 2nd example
ggplot(df, aes(x, y, width = w)) +
geom_tile(aes(fill = z), colour = "grey50")
plate_long <- screen_plate %>%
pivot_longer(cols = starts_with('C'), names_to = 'COL', values_to = 'LUMIN')
plate_long %>% ggplot(aes(x=COL,y=ROW)) + geom_tile(aes(fill=LUMIN))
plate_long %>% mutate(ROW_num = str_remove(ROW,'R'))
plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>%
mutate(ROW_num = as.numeric(ROW_num))
plate_long_num <- plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>% mutate(ROW_num = as.numeric(ROW_num)) %>%
mutate(COL_num = str_remove(COL,'C')) %>% mutate(COL_num = as.numeric(COL_num))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) + geom_tile(aes(fill=LUMIN))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) +
geom_tile(aes(fill=LUMIN)) +
scale_fill_viridis_c() +
scale_y_reverse()
ggsave('~/Desktop/WEHI_tidyR_course/plate_tileplot.pdf', width=6, height=3.5)
plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged <- plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged %>% count(well_tag)
neg_summ <- plate_tagged %>%
filter(well_tag=='negCTRL') %>%
summarize(mean_neg = mean(LUMIN),
sd_neg= sd(LUMIN))
meanNeg <- neg_summ %>% pull(mean_neg)
sdNeg <- neg_summ %>% pull(sd_neg)
plate_tagged %>% filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
plate_zScores <- plate_tagged %>%
filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
hits <- plate_zScores %>% filter(z_score < (-4) | z_score > 4)
write_csv(hits, path = '~/Desktop/WEHI_R_workshop/plate_hits.csv')
hits
list.files('~/Desktop/WEHI_tidyR_course/drug_screening_results/)
list.files('~/Desktop/WEHI_tidyR_course/drug_screening_results/')
list.files('~/Desktop/WEHI_tidyR_course/drug_screening_results/')
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/drug_screening_results/')
plate_files %>% str_remove(., pattern =".csv")
str_remove(plate_files, pattern =".csv")
plate_files
str_remove(plate_files, pattern =".csv")
plate_names <- str_remove(plate_files, pattern =".csv")
plate_names
for(plate in plate_names){
result_test <- paste(i,'test',sep="_")
print(result_test)
}
for(i in plate_names){
result_test <- paste(i,'test',sep="_")
print(result_test)
}
screen_plate <- read_csv('~/Desktop/WEHI_tidyR_course/screening_plates/PLATE1.csv')
infile <- paste(plate_name,'.csv', sep="")
infile
plate_names
infile <- paste(plate_names,'.csv', sep="")
infile
infile <- paste("'~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")}
for(i in plate_names){
infile <- paste("'~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
}
infile
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
print(in_file,out_plot,out_table)
}
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
print(c(in_file,out_plot,out_table))
}
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
all_names <- c(in_file,out_plot,out_table)
print(all_names)
}
list.files('~/Desktop/WEHI_tidyR_course/screening_plates/')
list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv)
list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv)
list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_files
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
print (c(in_file, out_plot, out_table))
}
library(tidyverse)
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_names <- str_remove(plate_files, pattern = ".csv")
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
screen_plate <- read_csv(in_file)
plate_long <- screen_plate %>%
pivot_longer(cols = starts_with('C'), names_to = 'COL', values_to = 'LUMIN')
plate_long %>% ggplot(aes(x=COL,y=ROW)) + geom_tile(aes(fill=LUMIN))
plate_long %>% mutate(ROW_num = str_remove(ROW,'R'))
plate_long_num <- plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>% mutate(ROW_num = as.numeric(ROW_num)) %>%
mutate(COL_num = str_remove(COL,'C')) %>% mutate(COL_num = as.numeric(COL_num))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) +
geom_tile(aes(fill=LUMIN)) +
scale_fill_viridis_c() +
scale_y_reverse()
ggsave(out_plot, width=6, height=3.5)
plate_tagged <- plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged %>% count(well_tag)
neg_summ <- plate_tagged %>%
filter(well_tag=='negCTRL') %>%
summarize(mean_neg = mean(LUMIN),
sd_neg= sd(LUMIN))
meanNeg <- neg_summ %>% pull(mean_neg)
sdNeg <- neg_summ %>% pull(sd_neg)
plate_zScores <- plate_tagged %>%
filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
hits <- plate_zScores %>% filter(z_score < (-4) | z_score > 4)
write_csv(hits, path = out_table)
}
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
print (c(in_file, out_plot, out_table))
}
library(tidyverse)
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_names <- str_remove(plate_files, pattern = ".csv")
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'_hits.pdf', sep="")
screen_plate <- read_csv(in_file)
plate_long <- screen_plate %>%
pivot_longer(cols = starts_with('C'), names_to = 'COL', values_to = 'LUMIN')
plate_long %>% ggplot(aes(x=COL,y=ROW)) + geom_tile(aes(fill=LUMIN))
plate_long %>% mutate(ROW_num = str_remove(ROW,'R'))
plate_long_num <- plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>% mutate(ROW_num = as.numeric(ROW_num)) %>%
mutate(COL_num = str_remove(COL,'C')) %>% mutate(COL_num = as.numeric(COL_num))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) +
geom_tile(aes(fill=LUMIN)) +
scale_fill_viridis_c() +
scale_y_reverse()
ggsave(out_plot, width=6, height=3.5)
plate_tagged <- plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged %>% count(well_tag)
neg_summ <- plate_tagged %>%
filter(well_tag=='negCTRL') %>%
summarize(mean_neg = mean(LUMIN),
sd_neg= sd(LUMIN))
meanNeg <- neg_summ %>% pull(mean_neg)
sdNeg <- neg_summ %>% pull(sd_neg)
plate_zScores <- plate_tagged %>%
filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
hits <- plate_zScores %>% filter(z_score < (-4) | z_score > 4)
write_csv(hits, path = out_table)
}
system('mkdir ~/Desktop/WEHI_tidyR_course/analysis_results')
ggsave('~/Desktop/WEHI_tidyR_course/analysis_results/plate_tileplot.pdf', width=6, height=3.5)
system('mkdir ~/Desktop/WEHI_tidyR_course/screening_results')
ggsave('~/Desktop/WEHI_tidyR_course/screening_results/plate_tileplot.pdf',
width=6, height=3.5)
write_csv(hits, path = '~/Desktop/WEHI_tidyR_course/screening_results/plate_hits.csv')
library(tidyverse)
list.files('~/Desktop/WEHI_tidyR_course/screening_plates/')
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_names <- str_remove(plate_files, pattern = ".csv")
for(i in plate_names){
result_test <- paste(i, 'test', sep="_")
print(result_test)
}
for(i in plate_names){
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_results/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_results/", i,'_hits.pdf', sep="")
print (c(in_file, out_plot, out_table))
}
library(tidyverse)
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_names <- str_remove(plate_files, pattern = ".csv")
for(i in plate_names){
#set up the variable file names
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_results/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_results/", i,'_hits.pdf', sep="")
#analysis code
screen_plate <- read_csv(in_file)
plate_long <- screen_plate %>%
pivot_longer(cols = starts_with('C'), names_to = 'COL', values_to = 'LUMIN')
plate_long %>% ggplot(aes(x=COL,y=ROW)) + geom_tile(aes(fill=LUMIN))
plate_long %>% mutate(ROW_num = str_remove(ROW,'R'))
plate_long_num <- plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>% mutate(ROW_num = as.numeric(ROW_num)) %>%
mutate(COL_num = str_remove(COL,'C')) %>% mutate(COL_num = as.numeric(COL_num))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) +
geom_tile(aes(fill=LUMIN)) +
scale_fill_viridis_c() +
scale_y_reverse()
#plot output
ggsave(out_plot, width=6, height=3.5)
plate_tagged <- plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged %>% count(well_tag)
neg_summ <- plate_tagged %>%
filter(well_tag=='negCTRL') %>%
summarize(mean_neg = mean(LUMIN),
sd_neg= sd(LUMIN))
meanNeg <- neg_summ %>% pull(mean_neg)
sdNeg <- neg_summ %>% pull(sd_neg)
plate_zScores <- plate_tagged %>%
filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
hits <- plate_zScores %>% filter(z_score < (-4) | z_score > 4)
#table output
write_csv(hits, path = out_table)
}
library(tidyverse)
plate_files <- list.files('~/Desktop/WEHI_tidyR_course/screening_plates/', pattern='.csv')
plate_names <- str_remove(plate_files, pattern = ".csv")
for(i in plate_names){
#set up the variable file names
in_file <- paste("~/Desktop/WEHI_tidyR_course/screening_plates/", i,'.csv', sep="")
out_plot <- paste("~/Desktop/WEHI_tidyR_course/screening_results/", i,'_tileplot.pdf', sep="")
out_table <- paste("~/Desktop/WEHI_tidyR_course/screening_results/", i,'_hits.csv', sep="")
#analysis code
screen_plate <- read_csv(in_file)
plate_long <- screen_plate %>%
pivot_longer(cols = starts_with('C'), names_to = 'COL', values_to = 'LUMIN')
plate_long %>% ggplot(aes(x=COL,y=ROW)) + geom_tile(aes(fill=LUMIN))
plate_long %>% mutate(ROW_num = str_remove(ROW,'R'))
plate_long_num <- plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>% mutate(ROW_num = as.numeric(ROW_num)) %>%
mutate(COL_num = str_remove(COL,'C')) %>% mutate(COL_num = as.numeric(COL_num))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) +
geom_tile(aes(fill=LUMIN)) +
scale_fill_viridis_c() +
scale_y_reverse()
#plot output
ggsave(out_plot, width=6, height=3.5)
plate_tagged <- plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged %>% count(well_tag)
neg_summ <- plate_tagged %>%
filter(well_tag=='negCTRL') %>%
summarize(mean_neg = mean(LUMIN),
sd_neg= sd(LUMIN))
meanNeg <- neg_summ %>% pull(mean_neg)
sdNeg <- neg_summ %>% pull(sd_neg)
plate_zScores <- plate_tagged %>%
filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
hits <- plate_zScores %>% filter(z_score < (-4) | z_score > 4)
#table output
write_csv(hits, path = out_table)
}
plate_tagged %>% head()
plate_tagged %>% count(tag)
plate_tagged %>% count(well_tag)
1280*5
emo::ji('Party Popper')
emo::ji('party popper')
emo::ji('partypopper')
emo::ji('celebrate')
emo::ji('celebrate')
emo::ji('celebrate')
emo::ji('celebrate')
emo::ji('celebrate')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('celebration')
emo::ji('party-popper')
emo::ji('party')
emo::ji('party')
emo::ji('party')
emo::ji('party')
emo::ji('party')
emo::ji('party')
emo::ji('party-popper')
emo::ji('partyPopper')
emo::ji('popper')
emo::ji('popper')
emo::ji('popper')
emo::ji('popper')
for(i in interests){
#same as above
step_result_v <- paste('Kripke prefers', i)
#make 1 column x 1-row dataframe:
#  The column name is 'sentence'
#  The row contains the text in step_result_v
step_result_df <- data_frame('sentence' = step_result_v)
#check that each step is working
print(step_result_df)
#overwrite the output dataframe with itself, and the extra row
loop_output_df <- bind_rows(loop_output_df, step_result_df)
}
i <- 3
result <- i * 50
print(result)
loop_values <- c(1,3,5,8,13)
for( i in loop_values){
result <- i * 50
print(result)}
paste('Kripke prefers', 'horseriding')
interests <- c('horseriding','swimming','ventriloquism')
for(i in interests){
result <- paste('Kripke prefers', i)
print(result)
}
loop_output_v <- vector()
loop_output_v <- vector()
for(i in interests){
step_result_v <- paste('Kripke prefers', i)
#retain the print() command to check that the loop is working
print(step_result_v)
#overwrite loop_output_v to contain itself and one extra value
loop_output_v <- c(loop_output_v, step_result_v)
}
loop_output_v
library(tidyverse)
loop_output_df <- data_frame()
for(i in interests){
#same as above
step_result_v <- paste('Kripke prefers', i)
#make 1 column x 1-row dataframe:
#  The column name is 'sentence'
#  The row contains the text in step_result_v
step_result_df <- data_frame('sentence' = step_result_v)
#check that each step is working
print(step_result_df)
#overwrite the output dataframe with itself, and the extra row
loop_output_df <- bind_rows(loop_output_df, step_result_df)
}
library(tidyverse)
screen_plate <- read_csv('~/Desktop/WEHI_tidyR_course/screening_plates/PLATE1.csv')
screen_plate %>% dim()
screen_plate %>% head()
?geom_tile()
#Copy and paste the code to make a toy data frame
df <- data.frame(
x = rep(c(2, 5, 7, 9, 12), 2),
y = rep(c(1, 2), each = 5),
z = factor(rep(1:5, each = 2)),
w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)
#Run the 2nd example
ggplot(df, aes(x, y, width = w)) +
geom_tile(aes(fill = z), colour = "grey50")
plate_long <- screen_plate %>%
pivot_longer(cols = starts_with('C'), names_to = 'COL', values_to = 'LUMIN')
plate_long %>% ggplot(aes(x=COL,y=ROW)) + geom_tile(aes(fill=LUMIN))
plate_long %>% mutate(ROW_num = str_remove(ROW,'R'))
plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>%
mutate(ROW_num = as.numeric(ROW_num))
plate_long_num <- plate_long %>%
mutate(ROW_num = str_remove(ROW,'R')) %>% mutate(ROW_num = as.numeric(ROW_num)) %>%
mutate(COL_num = str_remove(COL,'C')) %>% mutate(COL_num = as.numeric(COL_num))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) + geom_tile(aes(fill=LUMIN))
plate_long_num %>%
ggplot(aes(x=COL_num,y=ROW_num)) +
geom_tile(aes(fill=LUMIN)) +
scale_fill_viridis_c() +
scale_y_reverse()
ggsave('~/Desktop/WEHI_tidyR_course/screening_results/plate_tileplot.pdf',
width=6, height=3.5)
plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged <- plate_long_num %>%
mutate(well_tag = case_when(COL_num %in% c(1,23,25,47) ~ 'posCTRL',
COL_num %in% c(2,24,26,48) ~ 'negCTRL',
TRUE ~ 'test'))
plate_tagged %>% count(well_tag)
neg_summ <- plate_tagged %>%
filter(well_tag=='negCTRL') %>%
summarize(mean_neg = mean(LUMIN),
sd_neg= sd(LUMIN))
meanNeg <- neg_summ %>% pull(mean_neg)
sdNeg <- neg_summ %>% pull(sd_neg)
plate_tagged %>% filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
plate_zScores <- plate_tagged %>%
filter(well_tag=='test') %>%
mutate(z_score = (LUMIN - meanNeg) / sdNeg)
hits <- plate_zScores %>% filter(z_score < (-4) | z_score > 4)
write_csv(hits, path = '~/Desktop/WEHI_tidyR_course/screening_results/plate_hits.csv')
for(i in interests){
#same as above
step_result_v <- paste('Kripke prefers', i)
#make 1 column x 1-row dataframe:
#  The column name is 'sentence'
#  The row contains the text in step_result_v
step_result_df <- data_frame('sentence' = step_result_v)
#check that each step is working
print(step_result_df)
#overwrite the output dataframe with itself, and the extra row
loop_output_df <- bind_rows(loop_output_df, step_result_df)
}
slice(iris, 10:15)
left_join(x, y, by = "A")
?left_join()
>> how to use?
sample_n(iris, 10, replace = TRUE)
iris %>% sample_n(10,replace=TRUE)
iris %>% sample_n(10,replace=TRUE)
iris %>% sample_n(size = 10,replace=TRUE)
?sample_n
sample_n(iris,10,replace= TRUE)
sample_n(tbl = iris, size = 10, replace = TRUE, weight = NULL, .env = NULL)
π + coord_quickmap()
i <- ggplot(economics, aes(date, unemploy))
i + geom_step(direction = "hv")(
i + geom_step(direction = "hv")
e <- ggplot(mpg, aes(cty, hwy))
e + geom_text(aes(label = cty), nudge_x = 1, nudge_y = 1, check_overlap = TRUE)
e <- ggplot(mpg, aes(cty,hwy))
e + geom_text(aes(label = cty), nudge_x = 1, nudge_y = 1, check_overlap = TRUE)
?geom_text()
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::publish_book(render = "local")
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
Y
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
bookdown::publish_book(render = "local")
bookdown::render_book(input='index.Rmd', 'bookdown::gitbook')
bookdown::publish_book(render = "local")
